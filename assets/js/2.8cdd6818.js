(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{151:function(n,t,e){"use strict";e.r(t);var o=e(0),i=Object(o.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var n=this.$createElement,t=this._self._c||n;return t("div",{staticClass:"content"},[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("//节流\nfuntion throttle(func, wait) {　　\n    var lastTime = 0,\n        timeout;　　\n    return funtion() {　　　　\n        var context = this,\n            args = arguments,\n            delay = wait || 100,\n            now = new Date().getTime();　　　　\n        if (now - lastTime <= delay) {　　　　　　\n            return;　　　　\n        }　　　　\n        lastTime = now;\n        clearTimeout(timeout);　　\n        timeout = setTimeout(function() {\n            timeout = null;\n            func.apply(context, args);\n        }, delay)　　\n    }\n}\n// 去抖\nfunction debounce(func, wait) {\n    var timeout;\n    return function() {\n        var context = this,\n            args = arguments,\n            delay = wait || 250;\n        clearTimeout(timeout);\n        timeout = setTimeout(function() {\n            timeout = null;\n            func.apply(context, args);\n        }, delay);\n    };\n}\n\n\n// Demo\n//我们先来个节流,每秒输出一次\nwindow.onscroll=function(){\n    if(window.onScrollTag == undefined){\n        window.onScrollTag=true;\n        console.log(new Date());\n        setTimeout(function(){\n            window.onScrollTag=undefined;\n        },1000);\n    }\n}//先触发\nwindow.onscroll=function(){\n    if(window.onScrollTag == undefined){\n        window.onScrollTag=setTimeout(function(){\n            window.onScrollTag=undefined;\n            console.log(new Date());\n        },1000);\n    }\n}//后触发\n//从上面的代码可以看出来，我们在一个事件执行的时候就把标记改成不可用。一秒后才可以再次触发操作。\n//我们在尝试一下去抖\nwindow.onscroll=function(){\n    if(window.onScrollTag != undefined){\n        clearTimeout(window.onScrollTag);\n    }\n    window.onScrollTag=setTimeout(function(){\n        console.log(new Date());\n    },1000);\n}//消抖，消除抖动，感觉这个更好听\n")])])])])}],!1,null,null,null);t.default=i.exports}}]);